{
	"info": {
		"_postman_id": "8dd360a5-8e72-4561-be84-87d2c0c2ae1c",
		"name": "Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9704e54-e67f-4e2d-b611-64a2dccc14f2",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Board should be created\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"boardName\"));\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");\r",
							"});\r",
							"\r",
							"pm.environment.set(\"boardId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "24382c05-7699-4754-bbc3-d23e3520f3f4",
						"exec": [
							"//user currentBoardNumber to store board number\r",
							"let currentBoardNumber = pm.environment.get(\"currentBoardNumber\");\r",
							"\r",
							"// check if current board number is already defined\r",
							"if(currentBoardNumber){\r",
							"    currentBoardNumber++; //increment\r",
							"}else{\r",
							"    currentBoardNumber = 1; //start from one\r",
							"}\r",
							"\r",
							"const boardName = \"My Board\" + currentBoardNumber;\r",
							"\r",
							"//set the board name for the request\r",
							"pm.environment.set(\"boardName\", boardName);\r",
							"\r",
							"//set the currentBoardNumber for future board\r",
							"pm.environment.set(\"currentBoardNumber\", currentBoardNumber);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/?key={{keyid}}&token={{tokenid}}&name={{boardName}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{keyid}}"
						},
						{
							"key": "token",
							"value": "{{tokenid}}"
						},
						{
							"key": "defaultLabels",
							"value": "false",
							"disabled": true
						},
						{
							"key": "name",
							"value": "{{boardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create List TODO",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a08f6b70-638d-408d-9eec-01d94ae6c225",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"The name of the list\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"TODO\");\r",
							"});\r",
							"\r",
							"pm.test(\"Should not be closed\", function () {\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"   pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"boardId\"));\r",
							"    \r",
							"});\r",
							"\r",
							"pm.environment.set(\"todoListId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?key={{keyid}}&token={{tokenid}}&name=TODO&idBoard={{boardId}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{keyid}}"
						},
						{
							"key": "token",
							"value": "{{tokenid}}"
						},
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create List DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92185bdb-c385-43c3-9501-c41be96654d9",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"The name of the list\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"DONE\");\r",
							"});\r",
							"\r",
							"pm.test(\"Should not be closed\", function () {\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"List was created inside the board\", function () {\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"boardId\"));\r",
							"});\r",
							"\r",
							"pm.environment.set(\"doneListId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?key={{keyid}}&token={{tokenid}}&name=DONE&idBoard={{boardId}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{keyid}}"
						},
						{
							"key": "token",
							"value": "{{tokenid}}"
						},
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Creating Card Learning Postman",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "939ec968-62c9-4a62-8df4-b34480433a58",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Creating card\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Learning Postman\");\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"boardId\"));\r",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"listId\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Should not be closed\", function () {\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"cardId\", jsonData.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards?token={{tokenid}}&key={{keyid}}&name=Learning Postman&idList={{todoListId}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "token",
							"value": "{{tokenid}}"
						},
						{
							"key": "key",
							"value": "{{keyid}}"
						},
						{
							"key": "name",
							"value": "Learning Postman"
						},
						{
							"key": "idList",
							"value": "{{todoListId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "TODO list to the DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "628ffc8f-3f0f-4b13-899a-25eb723f5c71",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							" var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"The name of the list\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Learning Postman\");\r",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"doneListId\"))\r",
							"});\r",
							"\r",
							"pm.test(\"Should not be closed\", function () {\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Learning Postman\");\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"boardId\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/:id?idList={{doneListId}}&key={{keyid}}&token={{tokenid}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{doneListId}}"
						},
						{
							"key": "key",
							"value": "{{keyid}}"
						},
						{
							"key": "token",
							"value": "{{tokenid}}"
						},
						{
							"key": "id",
							"value": null,
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{cardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c770f17a-9bc6-4881-8bc0-81d548003e22",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//clean-up\r",
							"pm.environment.unset(\"boardId\")\r",
							"pm.environment.unset(\"boardName\")\r",
							"pm.environment.unset(\"boardId\")\r",
							"pm.environment.unset(\"todoListId\")\r",
							"pm.environment.unset(\"cardId\")\r",
							"pm.environment.unset(\"doneListId\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:id?key={{keyid}}&token={{tokenid}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{keyid}}"
						},
						{
							"key": "token",
							"value": "{{tokenid}}"
						},
						{
							"key": "id",
							"value": "{{boardId}}",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}